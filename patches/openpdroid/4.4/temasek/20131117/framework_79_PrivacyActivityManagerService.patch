diff -Npruw stock-framework/smali/android/privacy/surrogate/PrivacyActivityManagerService.smali pdroid-framework/smali/android/privacy/surrogate/PrivacyActivityManagerService.smali
--- stock-framework/smali/android/privacy/surrogate/PrivacyActivityManagerService.smali	1970-01-01 01:00:00.000000000 +0100
+++ pdroid-framework/smali/android/privacy/surrogate/PrivacyActivityManagerService.smali	2013-11-17 22:24:51.347209553 +0100
@@ -0,0 +1,1229 @@
+.class public final Landroid/privacy/surrogate/PrivacyActivityManagerService;
+.super Ljava/lang/Object;
+.source "PrivacyActivityManagerService.java"
+
+
+# static fields
+.field private static final DATA_SMS_RECEIVED_INTENT:Ljava/lang/String; = "android.intent.action.DATA_SMS_RECEIVED"
+
+.field private static final SMS_RECEIVED_ACTION_INTENT:Ljava/lang/String; = "android.provider.Telephony.SMS_RECEIVED"
+
+.field private static final TAG:Ljava/lang/String; = "PrivacyActivityManagerService"
+
+.field private static final WAP_PUSH_RECEIVED_INTENT:Ljava/lang/String; = "android.provider.Telephony.WAP_PUSH_RECEIVED"
+
+.field private static pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+.field private static tmpIn:Landroid/content/Intent;
+
+.field private static tmpInHash:J
+
+.field private static tmpInReceivers:I
+
+.field private static tmpMms:Landroid/content/Intent;
+
+.field private static tmpMmsHash:J
+
+.field private static tmpMmsReceivers:I
+
+.field private static tmpOut:Landroid/content/Intent;
+
+.field private static tmpOutHash:J
+
+.field private static tmpOutReceivers:I
+
+.field private static tmpPackageAddedHash:J
+
+.field private static tmpSms:Landroid/content/Intent;
+
+.field private static tmpSmsHash:J
+
+.field private static tmpSmsReceivers:I
+
+
+# direct methods
+.method static constructor <clinit>()V
+    .registers 3
+
+    const/4 v2, 0x0
+
+    const-wide/16 v0, 0x0
+
+    sput-wide v0, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpInHash:J
+
+    sput v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpInReceivers:I
+
+    sput-wide v0, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOutHash:J
+
+    sput v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOutReceivers:I
+
+    sput-wide v0, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSmsHash:J
+
+    sput v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSmsReceivers:I
+
+    sput-wide v0, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMmsHash:J
+
+    sput v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMmsReceivers:I
+
+    sput-wide v0, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpPackageAddedHash:J
+
+    return-void
+.end method
+
+.method public constructor <init>()V
+    .registers 1
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+.method public static enforcePrivacyPermission(Ljava/lang/String;ILandroid/content/Intent;Landroid/content/Context;I)V
+    .registers 29
+    .param p0    # Ljava/lang/String;
+    .param p1    # I
+    .param p2    # Landroid/content/Intent;
+    .param p3    # Landroid/content/Context;
+    .param p4    # I
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-nez v2, :cond_13
+
+    if-eqz p3, :cond_13
+
+    const-string/jumbo v2, "privacy"
+
+    move-object/from16 v0, p3
+
+    invoke-virtual {v0, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/privacy/PrivacySettingsManager;
+
+    sput-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    :cond_13
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-nez v2, :cond_2c
+
+    if-nez p3, :cond_2c
+
+    new-instance v2, Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x0
+
+    const-string/jumbo v4, "privacy"
+
+    invoke-static {v4}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v4
+
+    invoke-static {v4}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+
+    move-result-object v4
+
+    invoke-direct {v2, v3, v4}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+
+    sput-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    :cond_2c
+    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getAction()Ljava/lang/String;
+
+    move-result-object v16
+
+    const-string v2, "android.intent.action.NEW_OUTGOING_CALL"
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_cc
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    move-object/from16 v0, p0
+
+    move/from16 v1, p1
+
+    invoke-virtual {v2, v0, v1}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    const-string v2, "android.intent.extra.PHONE_NUMBER"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Landroid/content/Intent;->getStringExtra(Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v23
+
+    sget-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOutHash:J
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v4
+
+    cmp-long v2, v2, v4
+
+    if-eqz v2, :cond_66
+
+    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->clone()Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/content/Intent;
+
+    sput-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOut:Landroid/content/Intent;
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v2
+
+    sput-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOutHash:J
+
+    sput p4, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOutReceivers:I
+
+    :cond_66
+    if-eqz v8, :cond_93
+
+    :try_start_68
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getOutgoingCallsSetting()B
+
+    move-result v2
+
+    if-eqz v2, :cond_93
+
+    const-string v23, ""
+
+    const-string v2, "android.intent.extra.PHONE_NUMBER"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v2, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v5, 0x1
+
+    const-string/jumbo v6, "outgoingCall"
+
+    const/4 v7, 0x0
+
+    move-object/from16 v3, p0
+
+    move/from16 v4, p1
+
+    invoke-virtual/range {v2 .. v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_87
+    .catch Ljava/lang/Exception; {:try_start_68 .. :try_end_87} :catch_bd
+
+    :cond_87
+    :goto_87
+    sget v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOutReceivers:I
+
+    const/4 v3, 0x1
+
+    if-le v2, v3, :cond_c8
+
+    sget v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOutReceivers:I
+
+    add-int/lit8 v2, v2, -0x1
+
+    sput v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOutReceivers:I
+
+    :cond_92
+    :goto_92
+    return-void
+
+    :cond_93
+    :try_start_93
+    sget-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOutHash:J
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v4
+
+    cmp-long v2, v2, v4
+
+    if-nez v2, :cond_87
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOut:Landroid/content/Intent;
+
+    const-string v3, "android.intent.extra.PHONE_NUMBER"
+
+    invoke-virtual {v2, v3}, Landroid/content/Intent;->getStringExtra(Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v23
+
+    const-string v2, "android.intent.extra.PHONE_NUMBER"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v2, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v5, 0x0
+
+    const-string/jumbo v6, "outgoingCall"
+
+    const/4 v7, 0x0
+
+    move-object/from16 v3, p0
+
+    move/from16 v4, p1
+
+    invoke-virtual/range {v2 .. v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_bc
+    .catch Ljava/lang/Exception; {:try_start_93 .. :try_end_bc} :catch_bd
+
+    goto :goto_87
+
+    :catch_bd
+    move-exception v20
+
+    const-string v2, "PrivacyActivityManagerService"
+
+    const-string v3, "failed to enforce intent broadcast permission"
+
+    move-object/from16 v0, v20
+
+    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_87
+
+    :cond_c8
+    const/4 v2, 0x0
+
+    sput-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpOut:Landroid/content/Intent;
+
+    goto :goto_92
+
+    :cond_cc
+    const-string v2, "android.intent.action.PHONE_STATE"
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_170
+
+    const-string v2, "incoming_number"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Landroid/content/Intent;->getStringExtra(Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v23
+
+    if-eqz v23, :cond_92
+
+    invoke-virtual/range {v23 .. v23}, Ljava/lang/String;->isEmpty()Z
+
+    move-result v2
+
+    if-nez v2, :cond_92
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    move-object/from16 v0, p0
+
+    move/from16 v1, p1
+
+    invoke-virtual {v2, v0, v1}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    sget-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpInHash:J
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v4
+
+    cmp-long v2, v2, v4
+
+    if-eqz v2, :cond_10a
+
+    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->clone()Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/content/Intent;
+
+    sput-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpIn:Landroid/content/Intent;
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v2
+
+    sput-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpInHash:J
+
+    sput p4, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpInReceivers:I
+
+    :cond_10a
+    if-eqz v8, :cond_137
+
+    :try_start_10c
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getIncomingCallsSetting()B
+
+    move-result v2
+
+    if-eqz v2, :cond_137
+
+    const-string v23, ""
+
+    const-string v2, "incoming_number"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v2, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v5, 0x1
+
+    const-string v6, "incomingCall"
+
+    const/4 v7, 0x0
+
+    move-object/from16 v3, p0
+
+    move/from16 v4, p1
+
+    invoke-virtual/range {v2 .. v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_12a
+    .catch Ljava/lang/Exception; {:try_start_10c .. :try_end_12a} :catch_160
+
+    :cond_12a
+    :goto_12a
+    sget v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpInReceivers:I
+
+    const/4 v3, 0x1
+
+    if-le v2, v3, :cond_16b
+
+    sget v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpInReceivers:I
+
+    add-int/lit8 v2, v2, -0x1
+
+    sput v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpInReceivers:I
+
+    goto/16 :goto_92
+
+    :cond_137
+    :try_start_137
+    sget-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpInHash:J
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v4
+
+    cmp-long v2, v2, v4
+
+    if-nez v2, :cond_12a
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpIn:Landroid/content/Intent;
+
+    const-string v3, "incoming_number"
+
+    invoke-virtual {v2, v3}, Landroid/content/Intent;->getStringExtra(Ljava/lang/String;)Ljava/lang/String;
+
+    move-result-object v23
+
+    const-string v2, "incoming_number"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v23
+
+    invoke-virtual {v0, v2, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v5, 0x0
+
+    const-string v6, "incomingCall"
+
+    const/4 v7, 0x0
+
+    move-object/from16 v3, p0
+
+    move/from16 v4, p1
+
+    invoke-virtual/range {v2 .. v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_15f
+    .catch Ljava/lang/Exception; {:try_start_137 .. :try_end_15f} :catch_160
+
+    goto :goto_12a
+
+    :catch_160
+    move-exception v20
+
+    const-string v2, "PrivacyActivityManagerService"
+
+    const-string v3, "failed to enforce intent broadcast permission"
+
+    move-object/from16 v0, v20
+
+    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_12a
+
+    :cond_16b
+    const/4 v2, 0x0
+
+    sput-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpIn:Landroid/content/Intent;
+
+    goto/16 :goto_92
+
+    :cond_170
+    const-string v2, "android.provider.Telephony.SMS_RECEIVED"
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_253
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    move-object/from16 v0, p0
+
+    move/from16 v1, p1
+
+    invoke-virtual {v2, v0, v1}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    const-string v23, "[real]"
+
+    const-string/jumbo v2, "pdus"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Landroid/content/Intent;->getSerializableExtra(Ljava/lang/String;)Ljava/io/Serializable;
+
+    move-result-object v2
+
+    check-cast v2, [Ljava/lang/Object;
+
+    move-object/from16 v22, v2
+
+    check-cast v22, [Ljava/lang/Object;
+
+    if-eqz v22, :cond_1f8
+
+    const/4 v2, 0x0
+
+    aget-object v2, v22, v2
+
+    check-cast v2, [B
+
+    check-cast v2, [B
+
+    move-object/from16 v19, v2
+
+    :goto_1a0
+    sget-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSmsHash:J
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v4
+
+    cmp-long v2, v2, v4
+
+    if-eqz v2, :cond_1ba
+
+    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->clone()Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/content/Intent;
+
+    sput-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSms:Landroid/content/Intent;
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v2
+
+    sput-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSmsHash:J
+
+    sput p4, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSmsReceivers:I
+
+    :cond_1ba
+    if-eqz v8, :cond_1fb
+
+    :try_start_1bc
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getSmsSetting()B
+
+    move-result v2
+
+    if-eqz v2, :cond_1fb
+
+    const-string v23, "[empty]"
+
+    const/4 v2, 0x1
+
+    new-array v0, v2, [Ljava/lang/Object;
+
+    move-object/from16 v21, v0
+
+    const/4 v2, 0x0
+
+    const/16 v3, 0x10
+
+    new-array v3, v3, [B
+
+    fill-array-data v3, :array_3da
+
+    aput-object v3, v21, v2
+
+    const-string/jumbo v2, "pdus"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v2, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/io/Serializable;)Landroid/content/Intent;
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v5, 0x1
+
+    const-string/jumbo v6, "sms"
+
+    const/4 v7, 0x0
+
+    move-object/from16 v3, p0
+
+    move/from16 v4, p1
+
+    invoke-virtual/range {v2 .. v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_1eb
+    .catch Ljava/lang/Exception; {:try_start_1bc .. :try_end_1eb} :catch_240
+
+    :cond_1eb
+    :goto_1eb
+    sget v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSmsReceivers:I
+
+    const/4 v3, 0x1
+
+    if-le v2, v3, :cond_24e
+
+    sget v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSmsReceivers:I
+
+    add-int/lit8 v2, v2, -0x1
+
+    sput v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSmsReceivers:I
+
+    goto/16 :goto_92
+
+    :cond_1f8
+    const/16 v19, 0x0
+
+    goto :goto_1a0
+
+    :cond_1fb
+    :try_start_1fb
+    sget-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSmsHash:J
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v4
+
+    cmp-long v2, v2, v4
+
+    if-nez v2, :cond_1eb
+
+    const-string/jumbo v2, "pdus"
+
+    sget-object v3, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSms:Landroid/content/Intent;
+
+    const-string/jumbo v4, "pdus"
+
+    invoke-virtual {v3, v4}, Landroid/content/Intent;->getSerializableExtra(Ljava/lang/String;)Ljava/io/Serializable;
+
+    move-result-object v3
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/io/Serializable;)Landroid/content/Intent;
+
+    const-string/jumbo v2, "pdus"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Landroid/content/Intent;->getSerializableExtra(Ljava/lang/String;)Ljava/io/Serializable;
+
+    move-result-object v2
+
+    check-cast v2, [Ljava/lang/Object;
+
+    move-object v0, v2
+
+    check-cast v0, [Ljava/lang/Object;
+
+    move-object/from16 v22, v0
+
+    if-eqz v22, :cond_24b
+
+    const/4 v2, 0x0
+
+    aget-object v2, v22, v2
+
+    check-cast v2, [B
+
+    check-cast v2, [B
+
+    move-object/from16 v19, v2
+
+    :goto_231
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v5, 0x0
+
+    const-string/jumbo v6, "sms"
+
+    const/4 v7, 0x0
+
+    move-object/from16 v3, p0
+
+    move/from16 v4, p1
+
+    invoke-virtual/range {v2 .. v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_23f
+    .catch Ljava/lang/Exception; {:try_start_1fb .. :try_end_23f} :catch_240
+
+    goto :goto_1eb
+
+    :catch_240
+    move-exception v20
+
+    const-string v2, "PrivacyActivityManagerService"
+
+    const-string v3, "failed to enforce intent broadcast permission"
+
+    move-object/from16 v0, v20
+
+    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_1eb
+
+    :cond_24b
+    const/16 v19, 0x0
+
+    goto :goto_231
+
+    :cond_24e
+    const/4 v2, 0x0
+
+    sput-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpSms:Landroid/content/Intent;
+
+    goto/16 :goto_92
+
+    :cond_253
+    const-string v2, "android.provider.Telephony.WAP_PUSH_RECEIVED"
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-nez v2, :cond_267
+
+    const-string v2, "android.intent.action.DATA_SMS_RECEIVED"
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_340
+
+    :cond_267
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    move-object/from16 v0, p0
+
+    move/from16 v1, p1
+
+    invoke-virtual {v2, v0, v1}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    const-string v23, "[real]"
+
+    const-string/jumbo v2, "pdus"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Landroid/content/Intent;->getSerializableExtra(Ljava/lang/String;)Ljava/io/Serializable;
+
+    move-result-object v2
+
+    check-cast v2, [Ljava/lang/Object;
+
+    move-object/from16 v22, v2
+
+    check-cast v22, [Ljava/lang/Object;
+
+    if-eqz v22, :cond_2e5
+
+    const/4 v2, 0x0
+
+    aget-object v2, v22, v2
+
+    check-cast v2, [B
+
+    check-cast v2, [B
+
+    move-object/from16 v19, v2
+
+    :goto_28d
+    sget-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMmsHash:J
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v4
+
+    cmp-long v2, v2, v4
+
+    if-eqz v2, :cond_2a7
+
+    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->clone()Ljava/lang/Object;
+
+    move-result-object v2
+
+    check-cast v2, Landroid/content/Intent;
+
+    sput-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMms:Landroid/content/Intent;
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v2
+
+    sput-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMmsHash:J
+
+    sput p4, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMmsReceivers:I
+
+    :cond_2a7
+    if-eqz v8, :cond_2e8
+
+    :try_start_2a9
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getMmsSetting()B
+
+    move-result v2
+
+    if-eqz v2, :cond_2e8
+
+    const-string v23, "[empty]"
+
+    const/4 v2, 0x1
+
+    new-array v0, v2, [Ljava/lang/Object;
+
+    move-object/from16 v21, v0
+
+    const/4 v2, 0x0
+
+    const/16 v3, 0x10
+
+    new-array v3, v3, [B
+
+    fill-array-data v3, :array_3e6
+
+    aput-object v3, v21, v2
+
+    const-string/jumbo v2, "pdus"
+
+    move-object/from16 v0, p2
+
+    move-object/from16 v1, v21
+
+    invoke-virtual {v0, v2, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/io/Serializable;)Landroid/content/Intent;
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v5, 0x1
+
+    const-string/jumbo v6, "mms"
+
+    const/4 v7, 0x0
+
+    move-object/from16 v3, p0
+
+    move/from16 v4, p1
+
+    invoke-virtual/range {v2 .. v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_2d8
+    .catch Ljava/lang/Exception; {:try_start_2a9 .. :try_end_2d8} :catch_32d
+
+    :cond_2d8
+    :goto_2d8
+    sget v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMmsReceivers:I
+
+    const/4 v3, 0x1
+
+    if-le v2, v3, :cond_33b
+
+    sget v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMmsReceivers:I
+
+    add-int/lit8 v2, v2, -0x1
+
+    sput v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMmsReceivers:I
+
+    goto/16 :goto_92
+
+    :cond_2e5
+    const/16 v19, 0x0
+
+    goto :goto_28d
+
+    :cond_2e8
+    :try_start_2e8
+    sget-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMmsHash:J
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v4
+
+    cmp-long v2, v2, v4
+
+    if-nez v2, :cond_2d8
+
+    const-string/jumbo v2, "pdus"
+
+    sget-object v3, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMms:Landroid/content/Intent;
+
+    const-string/jumbo v4, "pdus"
+
+    invoke-virtual {v3, v4}, Landroid/content/Intent;->getSerializableExtra(Ljava/lang/String;)Ljava/io/Serializable;
+
+    move-result-object v3
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/io/Serializable;)Landroid/content/Intent;
+
+    const-string/jumbo v2, "pdus"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Landroid/content/Intent;->getSerializableExtra(Ljava/lang/String;)Ljava/io/Serializable;
+
+    move-result-object v2
+
+    check-cast v2, [Ljava/lang/Object;
+
+    move-object v0, v2
+
+    check-cast v0, [Ljava/lang/Object;
+
+    move-object/from16 v22, v0
+
+    if-eqz v22, :cond_338
+
+    const/4 v2, 0x0
+
+    aget-object v2, v22, v2
+
+    check-cast v2, [B
+
+    check-cast v2, [B
+
+    move-object/from16 v19, v2
+
+    :goto_31e
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v5, 0x0
+
+    const-string/jumbo v6, "mms"
+
+    const/4 v7, 0x0
+
+    move-object/from16 v3, p0
+
+    move/from16 v4, p1
+
+    invoke-virtual/range {v2 .. v8}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+    :try_end_32c
+    .catch Ljava/lang/Exception; {:try_start_2e8 .. :try_end_32c} :catch_32d
+
+    goto :goto_2d8
+
+    :catch_32d
+    move-exception v20
+
+    const-string v2, "PrivacyActivityManagerService"
+
+    const-string v3, "failed to enforce intent broadcast permission"
+
+    move-object/from16 v0, v20
+
+    invoke-static {v2, v3, v0}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
+
+    goto :goto_2d8
+
+    :cond_338
+    const/16 v19, 0x0
+
+    goto :goto_31e
+
+    :cond_33b
+    const/4 v2, 0x0
+
+    sput-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpMms:Landroid/content/Intent;
+
+    goto/16 :goto_92
+
+    :cond_340
+    const-string v2, "android.intent.action.BOOT_COMPLETED"
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_38d
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v2}, Landroid/privacy/PrivacySettingsManager;->setBootCompleted()V
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    move-object/from16 v0, p0
+
+    invoke-virtual {v2, v0}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    if-eqz v8, :cond_376
+
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getIntentBootCompletedSetting()B
+
+    move-result v2
+
+    if-eqz v2, :cond_376
+
+    const-string v2, "catchBootComplete"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Landroid/content/Intent;->setAction(Ljava/lang/String;)Landroid/content/Intent;
+
+    sget-object v9, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v12, 0x1
+
+    const-string v13, "intentBootCompleted"
+
+    const/4 v14, 0x0
+
+    const/4 v15, 0x0
+
+    move-object/from16 v10, p0
+
+    move/from16 v11, p1
+
+    invoke-virtual/range {v9 .. v15}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_92
+
+    :cond_376
+    const-string v2, "android.intent.action.BOOT_COMPLETED"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v2}, Landroid/content/Intent;->setAction(Ljava/lang/String;)Landroid/content/Intent;
+
+    sget-object v9, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v12, 0x0
+
+    const-string v13, "intentBootCompleted"
+
+    const/4 v14, 0x0
+
+    const/4 v15, 0x0
+
+    move-object/from16 v10, p0
+
+    move/from16 v11, p1
+
+    invoke-virtual/range {v9 .. v15}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_92
+
+    :cond_38d
+    const-string v2, "android.intent.action.PACKAGE_ADDED"
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v2
+
+    if-eqz v2, :cond_92
+
+    sget-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpPackageAddedHash:J
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v4
+
+    cmp-long v2, v2, v4
+
+    if-eqz v2, :cond_92
+
+    invoke-static/range {p2 .. p2}, Landroid/privacy/surrogate/PrivacyActivityManagerService;->hashCode(Landroid/content/Intent;)J
+
+    move-result-wide v2
+
+    sput-wide v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->tmpPackageAddedHash:J
+
+    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getData()Landroid/net/Uri;
+
+    move-result-object v2
+
+    invoke-virtual {v2}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;
+
+    move-result-object v17
+
+    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getExtras()Landroid/os/Bundle;
+
+    move-result-object v2
+
+    const-string v3, "android.intent.extra.UID"
+
+    invoke-virtual {v2, v3}, Landroid/os/Bundle;->getInt(Ljava/lang/String;)I
+
+    move-result v18
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    move-object/from16 v0, v17
+
+    move/from16 v1, v18
+
+    invoke-virtual {v2, v0, v1}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v8
+
+    if-eqz v8, :cond_92
+
+    invoke-virtual {v8}, Landroid/privacy/PrivacySettings;->getUid()I
+
+    move-result v2
+
+    move/from16 v0, v18
+
+    if-eq v2, v0, :cond_92
+
+    move/from16 v0, v18
+
+    invoke-virtual {v8, v0}, Landroid/privacy/PrivacySettings;->setUid(I)V
+
+    sget-object v2, Landroid/privacy/surrogate/PrivacyActivityManagerService;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v2, v8}, Landroid/privacy/PrivacySettingsManager;->saveSettings(Landroid/privacy/PrivacySettings;)Z
+
+    goto/16 :goto_92
+
+    nop
+
+    :array_3da
+    .array-data 1
+        0x0t
+        0x20t
+        0x1t
+        -0x7ft
+        -0x10t
+        0x0t
+        0x0t
+        0x11t
+        -0x70t
+        0x1t
+        0x30t
+        0x22t
+        0x22t
+        -0x80t
+        0x1t
+        0x20t
+    .end array-data
+
+    :array_3e6
+    .array-data 1
+        0x0t
+        0x20t
+        0x1t
+        -0x7ft
+        -0x10t
+        0x0t
+        0x0t
+        0x11t
+        -0x70t
+        0x1t
+        0x30t
+        0x22t
+        0x22t
+        -0x80t
+        0x1t
+        0x20t
+    .end array-data
+.end method
+
+.method private static hashCode(Landroid/content/Intent;)J
+    .registers 7
+    .param p0    # Landroid/content/Intent;
+
+    const-wide/16 v3, 0x0
+
+    const-string/jumbo v2, "privacy_hash"
+
+    invoke-virtual {p0, v2, v3, v4}, Landroid/content/Intent;->getLongExtra(Ljava/lang/String;J)J
+
+    move-result-wide v0
+
+    cmp-long v2, v0, v3
+
+    if-nez v2, :cond_1e
+
+    invoke-virtual {p0}, Landroid/content/Intent;->filterHashCode()I
+
+    move-result v2
+
+    int-to-long v2, v2
+
+    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J
+
+    move-result-wide v4
+
+    add-long v0, v2, v4
+
+    const-string/jumbo v2, "privacy_hash"
+
+    invoke-virtual {p0, v2, v0, v1}, Landroid/content/Intent;->putExtra(Ljava/lang/String;J)Landroid/content/Intent;
+
+    :cond_1e
+    return-wide v0
+.end method
