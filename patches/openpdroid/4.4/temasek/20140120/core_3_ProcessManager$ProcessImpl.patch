diff -Npruw stock-core/smali/java/lang/ProcessManager$ProcessImpl.smali pdroid-core/smali/java/lang/ProcessManager$ProcessImpl.smali
--- stock-core/smali/java/lang/ProcessManager$ProcessImpl.smali	2014-01-20 11:40:36.963161721 +0100
+++ pdroid-core/smali/java/lang/ProcessManager$ProcessImpl.smali	2014-01-20 11:40:43.011113396 +0100
@@ -21,6 +21,8 @@
 
 .field private final exitValueMutex:Ljava/lang/Object;
 
+.field private fakeProcess:Z
+
 .field private final inputStream:Ljava/io/InputStream;
 
 .field private final outputStream:Ljava/io/OutputStream;
@@ -40,6 +42,75 @@
 
     invoke-direct {p0}, Ljava/lang/Process;-><init>()V
 
+    const/4 v0, 0x0
+
+    iput-boolean v0, p0, Ljava/lang/ProcessManager$ProcessImpl;->fakeProcess:Z
+
+    iput-object v1, p0, Ljava/lang/ProcessManager$ProcessImpl;->exitValue:Ljava/lang/Integer;
+
+    new-instance v0, Ljava/lang/Object;
+
+    invoke-direct {v0}, Ljava/lang/Object;-><init>()V
+
+    iput-object v0, p0, Ljava/lang/ProcessManager$ProcessImpl;->exitValueMutex:Ljava/lang/Object;
+
+    iput p1, p0, Ljava/lang/ProcessManager$ProcessImpl;->pid:I
+
+    new-instance v0, Ljava/lang/ProcessManager$ProcessInputStream;
+
+    invoke-direct {v0, p4, v1}, Ljava/lang/ProcessManager$ProcessInputStream;-><init>(Ljava/io/FileDescriptor;Ljava/lang/ProcessManager$1;)V
+
+    iput-object v0, p0, Ljava/lang/ProcessManager$ProcessImpl;->errorStream:Ljava/io/InputStream;
+
+    const-string v0, "systemLogsSetting"
+
+    invoke-static {v0, p1}, Ljava/lang/PrivacyProcessManager;->hasPrivacyPermission(Ljava/lang/String;I)Z
+
+    move-result v0
+
+    if-eqz v0, :cond_30
+
+    new-instance v0, Ljava/lang/ProcessManager$ProcessInputStream;
+
+    invoke-direct {v0, p2, v1}, Ljava/lang/ProcessManager$ProcessInputStream;-><init>(Ljava/io/FileDescriptor;Ljava/lang/ProcessManager$1;)V
+
+    iput-object v0, p0, Ljava/lang/ProcessManager$ProcessImpl;->inputStream:Ljava/io/InputStream;
+
+    :goto_28
+    new-instance v0, Ljava/lang/ProcessManager$ProcessOutputStream;
+
+    invoke-direct {v0, p3, v1}, Ljava/lang/ProcessManager$ProcessOutputStream;-><init>(Ljava/io/FileDescriptor;Ljava/lang/ProcessManager$1;)V
+
+    iput-object v0, p0, Ljava/lang/ProcessManager$ProcessImpl;->outputStream:Ljava/io/OutputStream;
+
+    return-void
+
+    :cond_30
+    new-instance v0, Ljava/lang/PrivacyInputStream;
+
+    invoke-direct {v0}, Ljava/lang/PrivacyInputStream;-><init>()V
+
+    iput-object v0, p0, Ljava/lang/ProcessManager$ProcessImpl;->inputStream:Ljava/io/InputStream;
+
+    goto :goto_28
+.end method
+
+.method constructor <init>(ILjava/io/FileDescriptor;Ljava/io/FileDescriptor;Ljava/io/FileDescriptor;Z)V
+    .registers 8
+    .param p1    # I
+    .param p2    # Ljava/io/FileDescriptor;
+    .param p3    # Ljava/io/FileDescriptor;
+    .param p4    # Ljava/io/FileDescriptor;
+    .param p5    # Z
+
+    const/4 v1, 0x0
+
+    invoke-direct {p0}, Ljava/lang/Process;-><init>()V
+
+    const/4 v0, 0x0
+
+    iput-boolean v0, p0, Ljava/lang/ProcessManager$ProcessImpl;->fakeProcess:Z
+
     iput-object v1, p0, Ljava/lang/ProcessManager$ProcessImpl;->exitValue:Ljava/lang/Integer;
 
     new-instance v0, Ljava/lang/Object;
@@ -56,12 +127,15 @@
 
     iput-object v0, p0, Ljava/lang/ProcessManager$ProcessImpl;->errorStream:Ljava/io/InputStream;
 
+    if-eqz p5, :cond_2a
+
     new-instance v0, Ljava/lang/ProcessManager$ProcessInputStream;
 
     invoke-direct {v0, p2, v1}, Ljava/lang/ProcessManager$ProcessInputStream;-><init>(Ljava/io/FileDescriptor;Ljava/lang/ProcessManager$1;)V
 
     iput-object v0, p0, Ljava/lang/ProcessManager$ProcessImpl;->inputStream:Ljava/io/InputStream;
 
+    :goto_22
     new-instance v0, Ljava/lang/ProcessManager$ProcessOutputStream;
 
     invoke-direct {v0, p3, v1}, Ljava/lang/ProcessManager$ProcessOutputStream;-><init>(Ljava/io/FileDescriptor;Ljava/lang/ProcessManager$1;)V
@@ -69,6 +143,19 @@
     iput-object v0, p0, Ljava/lang/ProcessManager$ProcessImpl;->outputStream:Ljava/io/OutputStream;
 
     return-void
+
+    :cond_2a
+    new-instance v0, Ljava/lang/PrivacyInputStream;
+
+    invoke-direct {v0}, Ljava/lang/PrivacyInputStream;-><init>()V
+
+    iput-object v0, p0, Ljava/lang/ProcessManager$ProcessImpl;->inputStream:Ljava/io/InputStream;
+
+    const/4 v0, 0x1
+
+    iput-boolean v0, p0, Ljava/lang/ProcessManager$ProcessImpl;->fakeProcess:Z
+
+    goto :goto_22
 .end method
 
 .method static synthetic access$300(Ljava/lang/ProcessManager$ProcessImpl;)I
@@ -91,12 +178,17 @@
 
     :try_start_3
     iget-object v1, p0, Ljava/lang/ProcessManager$ProcessImpl;->exitValue:Ljava/lang/Integer;
-    :try_end_5
-    .catchall {:try_start_3 .. :try_end_5} :catchall_3b
 
-    if-nez v1, :cond_10
+    if-eqz v1, :cond_b
 
-    :try_start_7
+    iget-boolean v1, p0, Ljava/lang/ProcessManager$ProcessImpl;->fakeProcess:Z
+    :try_end_9
+    .catchall {:try_start_3 .. :try_end_9} :catchall_3f
+
+    if-eqz v1, :cond_14
+
+    :cond_b
+    :try_start_b
     sget-object v1, Llibcore/io/Libcore;->os:Llibcore/io/Os;
 
     iget v3, p0, Ljava/lang/ProcessManager$ProcessImpl;->pid:I
@@ -104,16 +196,16 @@
     sget v4, Llibcore/io/OsConstants;->SIGKILL:I
 
     invoke-interface {v1, v3, v4}, Llibcore/io/Os;->kill(II)V
-    :try_end_10
-    .catch Llibcore/io/ErrnoException; {:try_start_7 .. :try_end_10} :catch_21
-    .catchall {:try_start_7 .. :try_end_10} :catchall_3b
-
-    :cond_10
-    :goto_10
-    :try_start_10
+    :try_end_14
+    .catch Llibcore/io/ErrnoException; {:try_start_b .. :try_end_14} :catch_25
+    .catchall {:try_start_b .. :try_end_14} :catchall_3f
+
+    :cond_14
+    :goto_14
+    :try_start_14
     monitor-exit v2
-    :try_end_11
-    .catchall {:try_start_10 .. :try_end_11} :catchall_3b
+    :try_end_15
+    .catchall {:try_start_14 .. :try_end_15} :catchall_3f
 
     iget-object v1, p0, Ljava/lang/ProcessManager$ProcessImpl;->inputStream:Ljava/io/InputStream;
 
@@ -129,10 +221,10 @@
 
     return-void
 
-    :catch_21
+    :catch_25
     move-exception v0
 
-    :try_start_22
+    :try_start_26
     new-instance v1, Ljava/lang/StringBuilder;
 
     invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V
@@ -155,14 +247,14 @@
 
     invoke-static {v1, v0}, Ljava/lang/System;->logI(Ljava/lang/String;Ljava/lang/Throwable;)V
 
-    goto :goto_10
+    goto :goto_14
 
-    :catchall_3b
+    :catchall_3f
     move-exception v1
 
     monitor-exit v2
-    :try_end_3d
-    .catchall {:try_start_22 .. :try_end_3d} :catchall_3b
+    :try_end_41
+    .catchall {:try_start_26 .. :try_end_41} :catchall_3f
 
     throw v1
 .end method
@@ -170,14 +262,23 @@
 .method public exitValue()I
     .registers 5
 
+    iget-boolean v0, p0, Ljava/lang/ProcessManager$ProcessImpl;->fakeProcess:Z
+
+    if-eqz v0, :cond_8
+
+    const/4 v0, 0x0
+
+    invoke-virtual {p0, v0}, Ljava/lang/ProcessManager$ProcessImpl;->setExitValue(I)V
+
+    :cond_8
     iget-object v1, p0, Ljava/lang/ProcessManager$ProcessImpl;->exitValueMutex:Ljava/lang/Object;
 
     monitor-enter v1
 
-    :try_start_3
+    :try_start_b
     iget-object v0, p0, Ljava/lang/ProcessManager$ProcessImpl;->exitValue:Ljava/lang/Integer;
 
-    if-nez v0, :cond_25
+    if-nez v0, :cond_2d
 
     new-instance v0, Ljava/lang/IllegalThreadStateException;
 
@@ -205,17 +306,17 @@
 
     throw v0
 
-    :catchall_22
+    :catchall_2a
     move-exception v0
 
     monitor-exit v1
-    :try_end_24
-    .catchall {:try_start_3 .. :try_end_24} :catchall_22
+    :try_end_2c
+    .catchall {:try_start_b .. :try_end_2c} :catchall_2a
 
     throw v0
 
-    :cond_25
-    :try_start_25
+    :cond_2d
+    :try_start_2d
     iget-object v0, p0, Ljava/lang/ProcessManager$ProcessImpl;->exitValue:Ljava/lang/Integer;
 
     invoke-virtual {v0}, Ljava/lang/Integer;->intValue()I
@@ -223,8 +324,8 @@
     move-result v0
 
     monitor-exit v1
-    :try_end_2c
-    .catchall {:try_start_25 .. :try_end_2c} :catchall_22
+    :try_end_34
+    .catchall {:try_start_2d .. :try_end_34} :catchall_2a
 
     return v0
 .end method
