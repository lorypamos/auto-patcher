diff -Npruw stock-telephony/smali/com/android/internal/telephony/SMSDispatcher.smali pdroid-telephony/smali/com/android/internal/telephony/SMSDispatcher.smali
--- stock-telephony/smali/com/android/internal/telephony/SMSDispatcher.smali	2014-01-27 10:19:19.203131740 +0100
+++ pdroid-telephony/smali/com/android/internal/telephony/SMSDispatcher.smali	2014-01-27 10:19:24.364056954 +0100
@@ -15,6 +15,10 @@
 
 
 # static fields
+.field protected static final ACCESS_TYPE_ICC:I = 0x1
+
+.field protected static final ACCESS_TYPE_SMS_MMS:I = 0x0
+
 .field static final DBG:Z = false
 
 .field private static final EVENT_CONFIRM_SEND_TO_POSSIBLE_PREMIUM_SHORT_CODE:I = 0x8
@@ -53,6 +57,8 @@
 
 .field private static final PREMIUM_RULE_USE_SIM:I = 0x1
 
+.field protected static final P_TAG:Ljava/lang/String; = "PrivacySMSDispatcher"
+
 .field private static final SEND_NEXT_MSG_EXTRA:Ljava/lang/String; = "SendNextMsg"
 
 .field private static final SEND_RETRY_DELAY:I = 0x7d0
@@ -106,6 +112,8 @@
 
 .field private mUsageMonitor:Lcom/android/internal/telephony/SmsUsageMonitor;
 
+.field protected pSetMan:Landroid/privacy/PrivacySettingsManager;
+
 
 # direct methods
 .method static constructor <clinit>()V
@@ -218,6 +226,27 @@
 
     invoke-virtual {v0, v3, v2, v4}, Landroid/content/ContentResolver;->registerContentObserver(Landroid/net/Uri;ZLandroid/database/ContentObserver;)V
 
+    iget-object v0, p0, Lcom/android/internal/telephony/SMSDispatcher;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-nez v0, :cond_6c
+
+    new-instance v0, Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v3, 0x0
+
+    const-string v4, "privacy"
+
+    invoke-static {v4}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v4
+
+    invoke-static {v4}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+
+    move-result-object v4
+
+    invoke-direct {v0, v3, v4}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+
+    :cond_6c
     iget-object v0, p0, Lcom/android/internal/telephony/SMSDispatcher;->mContext:Landroid/content/Context;
 
     invoke-virtual {v0}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;
@@ -240,11 +269,11 @@
 
     move-result v0
 
-    if-nez v0, :cond_b1
+    if-nez v0, :cond_c5
 
     move v0, v1
 
-    :goto_72
+    :goto_86
     iput-boolean v0, p0, Lcom/android/internal/telephony/SMSDispatcher;->mSmsSendDisabled:Z
 
     const-string v0, "telephony.sms.pseudo_multipart"
@@ -307,10 +336,10 @@
 
     return-void
 
-    :cond_b1
+    :cond_c5
     move v0, v2
 
-    goto :goto_72
+    goto :goto_86
 .end method
 
 .method private denyIfQueueLimitReached(Lcom/android/internal/telephony/SMSDispatcher$SmsTracker;)Z
@@ -938,6 +967,26 @@
     goto :goto_a
 .end method
 
+.method protected getPackageName()[Ljava/lang/String;
+    .registers 4
+
+    iget-object v2, p0, Lcom/android/internal/telephony/SMSDispatcher;->mContext:Landroid/content/Context;
+
+    invoke-virtual {v2}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;
+
+    move-result-object v1
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v2
+
+    invoke-virtual {v1, v2}, Landroid/content/pm/PackageManager;->getPackagesForUid(I)[Ljava/lang/String;
+
+    move-result-object v0
+
+    return-object v0
+.end method
+
 .method public getPremiumSmsPermission(Ljava/lang/String;)I
     .registers 3
     .param p1    # Ljava/lang/String;
@@ -2070,6 +2119,301 @@
     return-void
 .end method
 
+.method protected isAllowed([Ljava/lang/String;I)Z
+    .registers 12
+    .param p1    # [Ljava/lang/String;
+    .param p2    # I
+
+    const/4 v8, -0x1
+
+    const/4 v4, 0x1
+
+    const/4 v3, 0x0
+
+    packed-switch p2, :pswitch_data_e6
+
+    const/4 v5, 0x0
+
+    :try_start_7
+    aget-object v5, p1, v5
+
+    const/4 v6, 0x0
+
+    invoke-virtual {p0, p2, v5, v6}, Lcom/android/internal/telephony/SMSDispatcher;->notify(ILjava/lang/String;B)V
+
+    move v3, v4
+
+    :goto_e
+    return v3
+
+    :pswitch_f
+    const/4 v2, 0x0
+
+    iget-object v5, p0, Lcom/android/internal/telephony/SMSDispatcher;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-nez v5, :cond_26
+
+    new-instance v5, Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v6, 0x0
+
+    const-string v7, "privacy"
+
+    invoke-static {v7}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v7
+
+    invoke-static {v7}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+
+    move-result-object v7
+
+    invoke-direct {v5, v6, v7}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+
+    iput-object v5, p0, Lcom/android/internal/telephony/SMSDispatcher;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    :cond_26
+    iget-object v5, p0, Lcom/android/internal/telephony/SMSDispatcher;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v5, :cond_7e
+
+    if-eqz p1, :cond_7e
+
+    const/4 v1, 0x0
+
+    :goto_2d
+    array-length v5, p1
+
+    if-ge v1, v5, :cond_75
+
+    iget-object v5, p0, Lcom/android/internal/telephony/SMSDispatcher;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    aget-object v6, p1, v1
+
+    const/4 v7, -0x1
+
+    invoke-virtual {v5, v6, v7}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v2
+
+    iget-object v5, p0, Lcom/android/internal/telephony/SMSDispatcher;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v5, :cond_71
+
+    if-eqz v2, :cond_71
+
+    invoke-virtual {v2}, Landroid/privacy/PrivacySettings;->getSmsSendSetting()B
+
+    move-result v5
+
+    if-eqz v5, :cond_71
+
+    aget-object v5, p1, v1
+
+    const/4 v6, 0x1
+
+    invoke-virtual {p0, p2, v5, v6}, Lcom/android/internal/telephony/SMSDispatcher;->notify(ILjava/lang/String;B)V
+    :try_end_4b
+    .catch Ljava/lang/Exception; {:try_start_7 .. :try_end_4b} :catch_4c
+
+    goto :goto_e
+
+    :catch_4c
+    move-exception v0
+
+    const-string v5, "PrivacySMSDispatcher"
+
+    const-string v6, "Got exception while checking for sms or ICC acess permission"
+
+    invoke-static {v5, v6}, Landroid/telephony/Rlog;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+
+    if-eqz p1, :cond_6f
+
+    iget-object v5, p0, Lcom/android/internal/telephony/SMSDispatcher;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v5, :cond_6f
+
+    array-length v5, p1
+
+    if-lez v5, :cond_6f
+
+    iget-object v5, p0, Lcom/android/internal/telephony/SMSDispatcher;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    aget-object v6, p1, v3
+
+    invoke-virtual {v5, v6, v8}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v2
+
+    if-eqz v2, :cond_6f
+
+    aget-object v5, p1, v3
+
+    invoke-virtual {p0, p2, v5, v3}, Lcom/android/internal/telephony/SMSDispatcher;->notify(ILjava/lang/String;B)V
+
+    :cond_6f
+    move v3, v4
+
+    goto :goto_e
+
+    :cond_71
+    const/4 v2, 0x0
+
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_2d
+
+    :cond_75
+    const/4 v5, 0x0
+
+    :try_start_76
+    aget-object v5, p1, v5
+
+    const/4 v6, 0x0
+
+    invoke-virtual {p0, p2, v5, v6}, Lcom/android/internal/telephony/SMSDispatcher;->notify(ILjava/lang/String;B)V
+
+    move v3, v4
+
+    goto :goto_e
+
+    :cond_7e
+    if-eqz p1, :cond_8a
+
+    array-length v5, p1
+
+    if-lez v5, :cond_8a
+
+    const/4 v5, 0x0
+
+    aget-object v5, p1, v5
+
+    const/4 v6, 0x0
+
+    invoke-virtual {p0, p2, v5, v6}, Lcom/android/internal/telephony/SMSDispatcher;->notify(ILjava/lang/String;B)V
+
+    :cond_8a
+    move v3, v4
+
+    goto :goto_e
+
+    :pswitch_8c
+    iget-object v5, p0, Lcom/android/internal/telephony/SMSDispatcher;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-nez v5, :cond_a2
+
+    new-instance v5, Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v6, 0x0
+
+    const-string v7, "privacy"
+
+    invoke-static {v7}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;
+
+    move-result-object v7
+
+    invoke-static {v7}, Landroid/privacy/IPrivacySettingsManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/privacy/IPrivacySettingsManager;
+
+    move-result-object v7
+
+    invoke-direct {v5, v6, v7}, Landroid/privacy/PrivacySettingsManager;-><init>(Landroid/content/Context;Landroid/privacy/IPrivacySettingsManager;)V
+
+    iput-object v5, p0, Lcom/android/internal/telephony/SMSDispatcher;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    :cond_a2
+    iget-object v5, p0, Lcom/android/internal/telephony/SMSDispatcher;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v5, :cond_d7
+
+    if-eqz p1, :cond_d7
+
+    const/4 v1, 0x0
+
+    :goto_a9
+    array-length v5, p1
+
+    if-ge v1, v5, :cond_cd
+
+    iget-object v5, p0, Lcom/android/internal/telephony/SMSDispatcher;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    aget-object v6, p1, v1
+
+    const/4 v7, -0x1
+
+    invoke-virtual {v5, v6, v7}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v2
+
+    iget-object v5, p0, Lcom/android/internal/telephony/SMSDispatcher;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-eqz v5, :cond_c9
+
+    if-eqz v2, :cond_c9
+
+    invoke-virtual {v2}, Landroid/privacy/PrivacySettings;->getIccAccessSetting()B
+
+    move-result v5
+
+    if-eqz v5, :cond_c9
+
+    aget-object v5, p1, v1
+
+    const/4 v6, 0x1
+
+    invoke-virtual {p0, p2, v5, v6}, Lcom/android/internal/telephony/SMSDispatcher;->notify(ILjava/lang/String;B)V
+
+    goto/16 :goto_e
+
+    :cond_c9
+    const/4 v2, 0x0
+
+    add-int/lit8 v1, v1, 0x1
+
+    goto :goto_a9
+
+    :cond_cd
+    const/4 v5, 0x0
+
+    aget-object v5, p1, v5
+
+    const/4 v6, 0x0
+
+    invoke-virtual {p0, p2, v5, v6}, Lcom/android/internal/telephony/SMSDispatcher;->notify(ILjava/lang/String;B)V
+
+    move v3, v4
+
+    goto/16 :goto_e
+
+    :cond_d7
+    if-eqz p1, :cond_e3
+
+    array-length v5, p1
+
+    if-lez v5, :cond_e3
+
+    const/4 v5, 0x0
+
+    aget-object v5, p1, v5
+
+    const/4 v6, 0x0
+
+    invoke-virtual {p0, p2, v5, v6}, Lcom/android/internal/telephony/SMSDispatcher;->notify(ILjava/lang/String;B)V
+    :try_end_e3
+    .catch Ljava/lang/Exception; {:try_start_76 .. :try_end_e3} :catch_4c
+
+    :cond_e3
+    move v3, v4
+
+    goto/16 :goto_e
+
+    :pswitch_data_e6
+    .packed-switch 0x0
+        :pswitch_f
+        :pswitch_8c
+    .end packed-switch
+.end method
+
 .method public isIms()Z
     .registers 4
 
@@ -2116,6 +2460,58 @@
     goto :goto_a
 .end method
 
+.method protected notify(ILjava/lang/String;B)V
+    .registers 11
+    .param p1    # I
+    .param p2    # Ljava/lang/String;
+    .param p3    # B
+
+    const/4 v2, 0x0
+
+    const/4 v5, 0x0
+
+    packed-switch p1, :pswitch_data_1c
+
+    :goto_5
+    return-void
+
+    :pswitch_6
+    iget-object v0, p0, Lcom/android/internal/telephony/SMSDispatcher;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string v4, "SmsSend"
+
+    move-object v1, p2
+
+    move v3, p3
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_5
+
+    :pswitch_11
+    iget-object v0, p0, Lcom/android/internal/telephony/SMSDispatcher;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const-string v4, "iccAccess"
+
+    move-object v1, p2
+
+    move v3, p3
+
+    move-object v6, v5
+
+    invoke-virtual/range {v0 .. v6}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_5
+
+    :pswitch_data_1c
+    .packed-switch 0x0
+        :pswitch_6
+        :pswitch_11
+    .end packed-switch
+.end method
+
 .method protected abstract sendData(Ljava/lang/String;Ljava/lang/String;I[BLandroid/app/PendingIntent;Landroid/app/PendingIntent;)V
 .end method
 
@@ -2370,7 +2766,7 @@
     :try_start_19
     invoke-virtual {v8, v10}, Landroid/app/PendingIntent;->send(I)V
     :try_end_1c
-    .catch Landroid/app/PendingIntent$CanceledException; {:try_start_19 .. :try_end_1c} :catch_c6
+    .catch Landroid/app/PendingIntent$CanceledException; {:try_start_19 .. :try_end_1c} :catch_e2
 
     :cond_1c
     :goto_1c
@@ -2404,6 +2800,39 @@
     goto :goto_23
 
     :cond_2f
+    invoke-virtual {p0}, Lcom/android/internal/telephony/SMSDispatcher;->getPackageName()[Ljava/lang/String;
+
+    move-result-object v10
+
+    invoke-virtual {p0, v10, v11}, Lcom/android/internal/telephony/SMSDispatcher;->isAllowed([Ljava/lang/String;I)Z
+
+    move-result v10
+
+    if-nez v10, :cond_49
+
+    if-eqz v8, :cond_23
+
+    const/4 v10, 0x1
+
+    :try_start_3c
+    invoke-virtual {v8, v10}, Landroid/app/PendingIntent;->send(I)V
+
+    const-string v10, "SMSDispatcher"
+
+    const-string v11, "fake also delivery state to radio off!"
+
+    invoke-static {v10, v11}, Landroid/telephony/Rlog;->i(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_46
+    .catch Landroid/app/PendingIntent$CanceledException; {:try_start_3c .. :try_end_46} :catch_47
+
+    goto :goto_23
+
+    :catch_47
+    move-exception v10
+
+    goto :goto_23
+
+    :cond_49
     iget-object v10, p0, Lcom/android/internal/telephony/SMSDispatcher;->mContext:Landroid/content/Context;
 
     invoke-virtual {v10}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;
@@ -2416,15 +2845,15 @@
 
     const/16 v10, 0x3e9
 
-    if-ne v1, v10, :cond_69
+    if-ne v1, v10, :cond_83
 
-    if-eqz v8, :cond_69
+    if-eqz v8, :cond_83
 
     invoke-virtual {v8}, Landroid/app/PendingIntent;->getCreatorPackage()Ljava/lang/String;
 
     move-result-object v10
 
-    if-eqz v10, :cond_69
+    if-eqz v10, :cond_83
 
     new-array v5, v12, [Ljava/lang/String;
 
@@ -2434,14 +2863,14 @@
 
     aput-object v10, v5, v11
 
-    :goto_4d
-    if-eqz v5, :cond_52
+    :goto_67
+    if-eqz v5, :cond_6c
 
     array-length v10, v5
 
-    if-nez v10, :cond_6e
+    if-nez v10, :cond_88
 
-    :cond_52
+    :cond_6c
     const-string v10, "SMSDispatcher"
 
     const-string v11, "Can\'t get calling app package name: refusing to send SMS"
@@ -2452,14 +2881,14 @@
 
     const/4 v10, 0x1
 
-    :try_start_5c
+    :try_start_76
     invoke-virtual {v8, v10}, Landroid/app/PendingIntent;->send(I)V
-    :try_end_5f
-    .catch Landroid/app/PendingIntent$CanceledException; {:try_start_5c .. :try_end_5f} :catch_60
+    :try_end_79
+    .catch Landroid/app/PendingIntent$CanceledException; {:try_start_76 .. :try_end_79} :catch_7a
 
     goto :goto_23
 
-    :catch_60
+    :catch_7a
     move-exception v3
 
     const-string v10, "SMSDispatcher"
@@ -2470,24 +2899,24 @@
 
     goto :goto_23
 
-    :cond_69
+    :cond_83
     invoke-virtual {v7, v1}, Landroid/content/pm/PackageManager;->getPackagesForUid(I)[Ljava/lang/String;
 
     move-result-object v5
 
-    goto :goto_4d
+    goto :goto_67
 
-    :cond_6e
+    :cond_88
     const/4 v10, 0x0
 
-    :try_start_6f
+    :try_start_89
     aget-object v10, v5, v10
 
     const/16 v11, 0x40
 
     invoke-virtual {v7, v10, v11}, Landroid/content/pm/PackageManager;->getPackageInfo(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;
-    :try_end_76
-    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_6f .. :try_end_76} :catch_8f
+    :try_end_90
+    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_89 .. :try_end_90} :catch_aa
 
     move-result-object v0
 
@@ -2505,7 +2934,7 @@
 
     move-result v10
 
-    if-nez v10, :cond_a8
+    if-nez v10, :cond_c4
 
     invoke-virtual {p0, v13, p1}, Lcom/android/internal/telephony/SMSDispatcher;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;
 
@@ -2513,9 +2942,9 @@
 
     invoke-virtual {p0, v10}, Lcom/android/internal/telephony/SMSDispatcher;->sendMessage(Landroid/os/Message;)Z
 
-    goto :goto_23
+    goto/16 :goto_23
 
-    :catch_8f
+    :catch_aa
     move-exception v2
 
     const-string v10, "SMSDispatcher"
@@ -2528,14 +2957,14 @@
 
     const/4 v10, 0x1
 
-    :try_start_9a
+    :try_start_b5
     invoke-virtual {v8, v10}, Landroid/app/PendingIntent;->send(I)V
-    :try_end_9d
-    .catch Landroid/app/PendingIntent$CanceledException; {:try_start_9a .. :try_end_9d} :catch_9e
+    :try_end_b8
+    .catch Landroid/app/PendingIntent$CanceledException; {:try_start_b5 .. :try_end_b8} :catch_ba
 
-    goto :goto_23
+    goto/16 :goto_23
 
-    :catch_9e
+    :catch_ba
     move-exception v3
 
     const-string v10, "SMSDispatcher"
@@ -2546,7 +2975,7 @@
 
     goto/16 :goto_23
 
-    :cond_a8
+    :cond_c4
     iget-object v10, p0, Lcom/android/internal/telephony/SMSDispatcher;->mPhone:Lcom/android/internal/telephony/PhoneBase;
 
     invoke-virtual {v10}, Lcom/android/internal/telephony/PhoneBase;->getServiceState()Landroid/telephony/ServiceState;
@@ -2561,9 +2990,9 @@
 
     move-result v10
 
-    if-nez v10, :cond_c1
+    if-nez v10, :cond_dd
 
-    if-eqz v9, :cond_c1
+    if-eqz v9, :cond_dd
 
     iget-object v10, p1, Lcom/android/internal/telephony/SMSDispatcher$SmsTracker;->mSentIntent:Landroid/app/PendingIntent;
 
@@ -2571,12 +3000,12 @@
 
     goto/16 :goto_23
 
-    :cond_c1
+    :cond_dd
     invoke-virtual {p0, p1}, Lcom/android/internal/telephony/SMSDispatcher;->sendSms(Lcom/android/internal/telephony/SMSDispatcher$SmsTracker;)V
 
     goto/16 :goto_23
 
-    :catch_c6
+    :catch_e2
     move-exception v10
 
     goto/16 :goto_1c
