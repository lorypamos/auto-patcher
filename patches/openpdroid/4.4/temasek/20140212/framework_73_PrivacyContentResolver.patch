diff -Npruw stock-framework/smali/android/privacy/surrogate/PrivacyContentResolver.smali pdroid-framework/smali/android/privacy/surrogate/PrivacyContentResolver.smali
--- stock-framework/smali/android/privacy/surrogate/PrivacyContentResolver.smali	1970-01-01 01:00:00.000000000 +0100
+++ pdroid-framework/smali/android/privacy/surrogate/PrivacyContentResolver.smali	2014-02-12 10:00:27.187653023 +0100
@@ -0,0 +1,878 @@
+.class public final Landroid/privacy/surrogate/PrivacyContentResolver;
+.super Ljava/lang/Object;
+.source "PrivacyContentResolver.java"
+
+
+# static fields
+.field private static final MMS_CONTENT_URI_AUTHORITY:Ljava/lang/String; = "mms"
+
+.field private static final MMS_SMS_CONTENT_URI_AUTHORITY:Ljava/lang/String; = "mms-sms"
+
+.field private static final SMS_CONTENT_URI_AUTHORITY:Ljava/lang/String; = "sms"
+
+.field private static final TAG:Ljava/lang/String; = "PrivacyContentResolver"
+
+.field private static pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+
+# direct methods
+.method public constructor <init>()V
+    .registers 1
+
+    invoke-direct {p0}, Ljava/lang/Object;-><init>()V
+
+    return-void
+.end method
+
+.method private static arrayToString([Ljava/lang/String;)Ljava/lang/String;
+    .registers 8
+    .param p0    # [Ljava/lang/String;
+
+    new-instance v4, Ljava/lang/StringBuffer;
+
+    invoke-direct {v4}, Ljava/lang/StringBuffer;-><init>()V
+
+    if-eqz p0, :cond_2d
+
+    move-object v0, p0
+
+    array-length v3, v0
+
+    const/4 v2, 0x0
+
+    :goto_a
+    if-ge v2, v3, :cond_30
+
+    aget-object v1, v0, v2
+
+    new-instance v5, Ljava/lang/StringBuilder;
+
+    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string v6, "["
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    const-string v6, "]"
+
+    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v5
+
+    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;
+
+    add-int/lit8 v2, v2, 0x1
+
+    goto :goto_a
+
+    :cond_2d
+    const-string v5, ""
+
+    :goto_2f
+    return-object v5
+
+    :cond_30
+    invoke-virtual {v4}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;
+
+    move-result-object v5
+
+    goto :goto_2f
+.end method
+
+.method public static enforcePrivacyPermission(Landroid/net/Uri;[Ljava/lang/String;Landroid/content/Context;Landroid/database/Cursor;)Landroid/database/Cursor;
+    .registers 21
+    .param p0    # Landroid/net/Uri;
+    .param p1    # [Ljava/lang/String;
+    .param p2    # Landroid/content/Context;
+    .param p3    # Landroid/database/Cursor;
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    if-eqz p0, :cond_1db
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-nez v1, :cond_13
+
+    const-string/jumbo v1, "privacy"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Landroid/privacy/PrivacySettingsManager;
+
+    sput-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    :cond_13
+    invoke-virtual/range {p2 .. p2}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v3
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v1, v2, v3}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v7
+
+    invoke-virtual/range {p0 .. p0}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;
+
+    move-result-object v9
+
+    const-string v15, "[real]"
+
+    move-object/from16 v13, p3
+
+    if-eqz v9, :cond_54
+
+    const-string v1, "contacts"
+
+    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-nez v1, :cond_3b
+
+    const-string v1, "com.android.contacts"
+
+    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_ab
+
+    :cond_3b
+    if-eqz v7, :cond_54
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getContactsSetting()B
+
+    move-result v1
+
+    const/4 v4, 0x1
+
+    if-ne v1, v4, :cond_55
+
+    const-string v15, "[empty]"
+
+    new-instance v13, Landroid/privacy/surrogate/PrivacyCursor;
+
+    invoke-direct {v13}, Landroid/privacy/surrogate/PrivacyCursor;-><init>()V
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x1
+
+    const-string v5, "contacts"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    :cond_54
+    :goto_54
+    return-object v13
+
+    :cond_55
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getContactsSetting()B
+
+    move-result v1
+
+    const/4 v4, 0x2
+
+    if-ne v1, v4, :cond_a1
+
+    invoke-virtual/range {p0 .. p0}, Landroid/net/Uri;->toString()Ljava/lang/String;
+
+    move-result-object v1
+
+    sget-object v4, Landroid/provider/ContactsContract$Contacts;->CONTENT_URI:Landroid/net/Uri;
+
+    invoke-virtual {v4}, Landroid/net/Uri;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-virtual {v1, v4}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_a1
+
+    const/4 v11, 0x0
+
+    if-eqz p1, :cond_82
+
+    move-object/from16 v8, p1
+
+    array-length v12, v8
+
+    const/4 v10, 0x0
+
+    :goto_73
+    if-ge v10, v12, :cond_82
+
+    aget-object v16, v8, v10
+
+    const-string v1, "_id"
+
+    move-object/from16 v0, v16
+
+    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_93
+
+    const/4 v11, 0x1
+
+    :cond_82
+    if-nez v11, :cond_96
+
+    new-instance v13, Landroid/privacy/surrogate/PrivacyCursor;
+
+    invoke-direct {v13}, Landroid/privacy/surrogate/PrivacyCursor;-><init>()V
+
+    :goto_89
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x2
+
+    const-string v5, "contacts"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_54
+
+    :cond_93
+    add-int/lit8 v10, v10, 0x1
+
+    goto :goto_73
+
+    :cond_96
+    new-instance v14, Landroid/privacy/surrogate/PrivacyCursor;
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getAllowedContacts()[I
+
+    move-result-object v1
+
+    invoke-direct {v14, v13, v1}, Landroid/privacy/surrogate/PrivacyCursor;-><init>(Landroid/database/Cursor;[I)V
+
+    move-object v13, v14
+
+    goto :goto_89
+
+    :cond_a1
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x0
+
+    const-string v5, "contacts"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_54
+
+    :cond_ab
+    const-string v1, "com.android.calendar"
+
+    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_d8
+
+    if-eqz v7, :cond_cd
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getCalendarSetting()B
+
+    move-result v1
+
+    const/4 v4, 0x1
+
+    if-ne v1, v4, :cond_cd
+
+    const-string v15, "[empty]"
+
+    new-instance v13, Landroid/privacy/surrogate/PrivacyCursor;
+
+    invoke-direct {v13}, Landroid/privacy/surrogate/PrivacyCursor;-><init>()V
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x1
+
+    const-string v5, "calendar"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_54
+
+    :cond_cd
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x0
+
+    const-string v5, "calendar"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_d8
+    const-string/jumbo v1, "mms"
+
+    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_109
+
+    if-eqz v7, :cond_fd
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getMmsSetting()B
+
+    move-result v1
+
+    const/4 v4, 0x1
+
+    if-ne v1, v4, :cond_fd
+
+    const-string v15, "[empty]"
+
+    new-instance v13, Landroid/privacy/surrogate/PrivacyCursor;
+
+    invoke-direct {v13}, Landroid/privacy/surrogate/PrivacyCursor;-><init>()V
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x1
+
+    const-string/jumbo v5, "mms"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_fd
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x0
+
+    const-string/jumbo v5, "mms"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_109
+    const-string/jumbo v1, "sms"
+
+    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_13a
+
+    if-eqz v7, :cond_12e
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getSmsSetting()B
+
+    move-result v1
+
+    const/4 v4, 0x1
+
+    if-ne v1, v4, :cond_12e
+
+    const-string v15, "[empty]"
+
+    new-instance v13, Landroid/privacy/surrogate/PrivacyCursor;
+
+    invoke-direct {v13}, Landroid/privacy/surrogate/PrivacyCursor;-><init>()V
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x1
+
+    const-string/jumbo v5, "sms"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_12e
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x0
+
+    const-string/jumbo v5, "sms"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_13a
+    const-string/jumbo v1, "mms-sms"
+
+    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-nez v1, :cond_14c
+
+    const-string/jumbo v1, "mms-sms-v2"
+
+    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_17b
+
+    :cond_14c
+    if-eqz v7, :cond_16f
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getMmsSetting()B
+
+    move-result v1
+
+    const/4 v4, 0x1
+
+    if-eq v1, v4, :cond_15c
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getSmsSetting()B
+
+    move-result v1
+
+    const/4 v4, 0x1
+
+    if-ne v1, v4, :cond_16f
+
+    :cond_15c
+    const-string v15, "[empty]"
+
+    new-instance v13, Landroid/privacy/surrogate/PrivacyCursor;
+
+    invoke-direct {v13}, Landroid/privacy/surrogate/PrivacyCursor;-><init>()V
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x1
+
+    const-string/jumbo v5, "mmsSms"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_16f
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x0
+
+    const-string/jumbo v5, "mmsSms"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_17b
+    const-string v1, "call_log"
+
+    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_1a9
+
+    if-eqz v7, :cond_19e
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getCallLogSetting()B
+
+    move-result v1
+
+    const/4 v4, 0x1
+
+    if-ne v1, v4, :cond_19e
+
+    const-string v15, "[empty]"
+
+    new-instance v13, Landroid/privacy/surrogate/PrivacyCursor;
+
+    invoke-direct {v13}, Landroid/privacy/surrogate/PrivacyCursor;-><init>()V
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x1
+
+    const-string v5, "callLog"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_19e
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x0
+
+    const-string v5, "callLog"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_1a9
+    sget-object v1, Landroid/provider/Browser;->BOOKMARKS_URI:Landroid/net/Uri;
+
+    invoke-virtual {v1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;
+
+    move-result-object v1
+
+    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_54
+
+    if-eqz v7, :cond_1d0
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getBookmarksSetting()B
+
+    move-result v1
+
+    const/4 v4, 0x1
+
+    if-ne v1, v4, :cond_1d0
+
+    const-string v15, "[empty]"
+
+    new-instance v13, Landroid/privacy/surrogate/PrivacyCursor;
+
+    invoke-direct {v13}, Landroid/privacy/surrogate/PrivacyCursor;-><init>()V
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x1
+
+    const-string v5, "bookmarks"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_1d0
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x0
+
+    const-string v5, "bookmarks"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto/16 :goto_54
+
+    :cond_1db
+    move-object/from16 v13, p3
+
+    goto/16 :goto_54
+.end method
+
+.method public static enforcePrivacyPermission(Landroid/net/Uri;[Ljava/lang/String;Landroid/content/Context;Landroid/database/Cursor;Z)Landroid/database/Cursor;
+    .registers 20
+    .param p0    # Landroid/net/Uri;
+    .param p1    # [Ljava/lang/String;
+    .param p2    # Landroid/content/Context;
+    .param p3    # Landroid/database/Cursor;
+    .param p4    # Z
+    .annotation system Ldalvik/annotation/Throws;
+        value = {
+            Landroid/os/RemoteException;
+        }
+    .end annotation
+
+    if-eqz p0, :cond_dd
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    if-nez v1, :cond_13
+
+    const-string/jumbo v1, "privacy"
+
+    move-object/from16 v0, p2
+
+    invoke-virtual {v0, v1}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;
+
+    move-result-object v1
+
+    check-cast v1, Landroid/privacy/PrivacySettingsManager;
+
+    sput-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    :cond_13
+    invoke-virtual/range {p2 .. p2}, Landroid/content/Context;->getPackageName()Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-static {}, Landroid/os/Binder;->getCallingUid()I
+
+    move-result v3
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    invoke-virtual {v1, v2, v3}, Landroid/privacy/PrivacySettingsManager;->getSettings(Ljava/lang/String;I)Landroid/privacy/PrivacySettings;
+
+    move-result-object v7
+
+    invoke-virtual {p0}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;
+
+    move-result-object v9
+
+    const-string v14, "[real]"
+
+    move-object/from16 v13, p3
+
+    if-eqz v9, :cond_6d
+
+    const-string v1, "com.google.android.gsf.gservices"
+
+    invoke-virtual {v9, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_6d
+
+    if-eqz v7, :cond_cb
+
+    invoke-virtual {v7}, Landroid/privacy/PrivacySettings;->getSimInfoSetting()B
+
+    move-result v1
+
+    if-eqz v1, :cond_cb
+
+    invoke-interface/range {p3 .. p3}, Landroid/database/Cursor;->getPosition()I
+
+    move-result v8
+
+    const/4 v11, -0x1
+
+    const/4 v12, 0x0
+
+    :goto_41
+    :try_start_41
+    invoke-interface/range {p3 .. p3}, Landroid/database/Cursor;->getCount()I
+
+    move-result v1
+
+    if-ge v12, v1, :cond_5d
+
+    invoke-interface/range {p3 .. p3}, Landroid/database/Cursor;->moveToNext()Z
+
+    const/4 v1, 0x0
+
+    move-object/from16 v0, p3
+
+    invoke-interface {v0, v1}, Landroid/database/Cursor;->getString(I)Ljava/lang/String;
+
+    move-result-object v1
+
+    const-string v4, "android_id"
+
+    invoke-virtual {v1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
+
+    move-result v1
+
+    if-eqz v1, :cond_6e
+
+    invoke-interface/range {p3 .. p3}, Landroid/database/Cursor;->getPosition()I
+    :try_end_5c
+    .catch Ljava/lang/Exception; {:try_start_41 .. :try_end_5c} :catch_71
+    .catchall {:try_start_41 .. :try_end_5c} :catchall_8b
+
+    move-result v11
+
+    :cond_5d
+    move-object/from16 v0, p3
+
+    invoke-interface {v0, v8}, Landroid/database/Cursor;->moveToPosition(I)Z
+
+    const/4 v1, -0x1
+
+    if-ne v11, v1, :cond_9e
+
+    const-string v1, "PrivacyContentResolver"
+
+    const-string/jumbo v4, "now we return real cursor, because forbidden_pos is -1"
+
+    invoke-static {v1, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    :cond_6d
+    :goto_6d
+    return-object v13
+
+    :cond_6e
+    add-int/lit8 v12, v12, 0x1
+
+    goto :goto_41
+
+    :catch_71
+    move-exception v10
+
+    :try_start_72
+    const-string v1, "PrivacyContentResolver"
+
+    const-string/jumbo v4, "something went wrong while getting blocked permission for android id"
+
+    invoke-static {v1, v4}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+    :try_end_7a
+    .catchall {:try_start_72 .. :try_end_7a} :catchall_8b
+
+    move-object/from16 v0, p3
+
+    invoke-interface {v0, v8}, Landroid/database/Cursor;->moveToPosition(I)Z
+
+    const/4 v1, -0x1
+
+    if-ne v11, v1, :cond_9e
+
+    const-string v1, "PrivacyContentResolver"
+
+    const-string/jumbo v4, "now we return real cursor, because forbidden_pos is -1"
+
+    invoke-static {v1, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_6d
+
+    :catchall_8b
+    move-exception v1
+
+    move-object/from16 v0, p3
+
+    invoke-interface {v0, v8}, Landroid/database/Cursor;->moveToPosition(I)Z
+
+    const/4 v4, -0x1
+
+    if-ne v11, v4, :cond_9d
+
+    const-string v1, "PrivacyContentResolver"
+
+    const-string/jumbo v4, "now we return real cursor, because forbidden_pos is -1"
+
+    invoke-static {v1, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    goto :goto_6d
+
+    :cond_9d
+    throw v1
+
+    :cond_9e
+    const-string v1, "PrivacyContentResolver"
+
+    new-instance v4, Ljava/lang/StringBuilder;
+
+    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V
+
+    const-string/jumbo v5, "now blocking google access to android id and give fake cursor. forbidden_position: "
+
+    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;
+
+    move-result-object v4
+
+    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;
+
+    move-result-object v4
+
+    invoke-static {v1, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    const-string v14, "[fake]"
+
+    new-instance v13, Landroid/privacy/surrogate/PrivacyCursor;
+
+    move-object/from16 v0, p3
+
+    invoke-direct {v13, v0, v11}, Landroid/privacy/surrogate/PrivacyCursor;-><init>(Landroid/database/Cursor;I)V
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x1
+
+    const-string/jumbo v5, "networkInfoSIM"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_6d
+
+    :cond_cb
+    const-string v1, "PrivacyContentResolver"
+
+    const-string v4, "google is allowed to get real cursor"
+
+    invoke-static {v1, v4}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I
+
+    sget-object v1, Landroid/privacy/surrogate/PrivacyContentResolver;->pSetMan:Landroid/privacy/PrivacySettingsManager;
+
+    const/4 v4, 0x0
+
+    const-string/jumbo v5, "networkInfoSIM"
+
+    const/4 v6, 0x0
+
+    invoke-virtual/range {v1 .. v7}, Landroid/privacy/PrivacySettingsManager;->notification(Ljava/lang/String;IBLjava/lang/String;Ljava/lang/String;Landroid/privacy/PrivacySettings;)V
+
+    goto :goto_6d
+
+    :cond_dd
+    move-object/from16 v13, p3
+
+    goto :goto_6d
+.end method
