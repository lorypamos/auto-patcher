diff -Npruw stock-framework/smali/android/media/MediaRecorder$PrivacyRunner.smali pdroid-framework/smali/android/media/MediaRecorder$PrivacyRunner.smali
--- stock-framework/smali/android/media/MediaRecorder$PrivacyRunner.smali	1970-01-01 01:00:00.000000000 +0100
+++ pdroid-framework/smali/android/media/MediaRecorder$PrivacyRunner.smali	2013-10-29 11:36:35.006829903 +0100
@@ -0,0 +1,218 @@
+.class Landroid/media/MediaRecorder$PrivacyRunner;
+.super Ljava/lang/Thread;
+.source "MediaRecorder.java"
+
+
+# annotations
+.annotation system Ldalvik/annotation/EnclosingClass;
+    value = Landroid/media/MediaRecorder;
+.end annotation
+
+.annotation system Ldalvik/annotation/InnerClass;
+    accessFlags = 0x2
+    name = "PrivacyRunner"
+.end annotation
+
+
+# static fields
+.field private static final OFFSET_DELAY:J = 0x9c4L
+
+
+# instance fields
+.field private delay:J
+
+.field final synthetic this$0:Landroid/media/MediaRecorder;
+
+
+# direct methods
+.method public constructor <init>(Landroid/media/MediaRecorder;)V
+    .registers 4
+
+    iput-object p1, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    invoke-direct {p0}, Ljava/lang/Thread;-><init>()V
+
+    const-wide/16 v0, 0x9c4
+
+    iput-wide v0, p0, Landroid/media/MediaRecorder$PrivacyRunner;->delay:J
+
+    return-void
+.end method
+
+
+# virtual methods
+.method public getDelay()J
+    .registers 3
+
+    iget-wide v0, p0, Landroid/media/MediaRecorder$PrivacyRunner;->delay:J
+
+    return-wide v0
+.end method
+
+.method public run()V
+    .registers 5
+
+    :try_start_0
+    iget-wide v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->delay:J
+
+    invoke-static {v2, v3}, Ljava/lang/Thread;->sleep(J)V
+
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    #calls: Landroid/media/MediaRecorder;->privacyStop()V
+    invoke-static {v2}, Landroid/media/MediaRecorder;->access$300(Landroid/media/MediaRecorder;)V
+
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    #getter for: Landroid/media/MediaRecorder;->mPath:Ljava/lang/String;
+    invoke-static {v2}, Landroid/media/MediaRecorder;->access$400(Landroid/media/MediaRecorder;)Ljava/lang/String;
+
+    move-result-object v2
+
+    if-eqz v2, :cond_2f
+
+    new-instance v1, Ljava/io/File;
+
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    #getter for: Landroid/media/MediaRecorder;->mPath:Ljava/lang/String;
+    invoke-static {v2}, Landroid/media/MediaRecorder;->access$400(Landroid/media/MediaRecorder;)Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-direct {v1, v2}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v1}, Ljava/io/File;->delete()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_29
+
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    const/4 v3, 0x1
+
+    #setter for: Landroid/media/MediaRecorder;->deletedFile:Z
+    invoke-static {v2, v3}, Landroid/media/MediaRecorder;->access$502(Landroid/media/MediaRecorder;Z)Z
+    :try_end_29
+    .catchall {:try_start_0 .. :try_end_29} :catchall_76
+    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_29} :catch_57
+
+    :cond_29
+    :goto_29
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    #calls: Landroid/media/MediaRecorder;->privacyStop()V
+    invoke-static {v2}, Landroid/media/MediaRecorder;->access$300(Landroid/media/MediaRecorder;)V
+
+    :goto_2e
+    return-void
+
+    :cond_2f
+    :try_start_2f
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    #getter for: Landroid/media/MediaRecorder;->mFd:Ljava/io/FileDescriptor;
+    invoke-static {v2}, Landroid/media/MediaRecorder;->access$600(Landroid/media/MediaRecorder;)Ljava/io/FileDescriptor;
+
+    move-result-object v2
+
+    if-eqz v2, :cond_68
+
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    #getter for: Landroid/media/MediaRecorder;->pFileDescriptorPath:Ljava/lang/String;
+    invoke-static {v2}, Landroid/media/MediaRecorder;->access$700(Landroid/media/MediaRecorder;)Ljava/lang/String;
+
+    move-result-object v2
+
+    if-eqz v2, :cond_68
+
+    new-instance v1, Ljava/io/File;
+
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    #getter for: Landroid/media/MediaRecorder;->pFileDescriptorPath:Ljava/lang/String;
+    invoke-static {v2}, Landroid/media/MediaRecorder;->access$700(Landroid/media/MediaRecorder;)Ljava/lang/String;
+
+    move-result-object v2
+
+    invoke-direct {v1, v2}, Ljava/io/File;-><init>(Ljava/lang/String;)V
+
+    invoke-virtual {v1}, Ljava/io/File;->delete()Z
+
+    move-result v2
+
+    if-eqz v2, :cond_29
+
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    const/4 v3, 0x1
+
+    #setter for: Landroid/media/MediaRecorder;->deletedFile:Z
+    invoke-static {v2, v3}, Landroid/media/MediaRecorder;->access$502(Landroid/media/MediaRecorder;Z)Z
+    :try_end_56
+    .catchall {:try_start_2f .. :try_end_56} :catchall_76
+    .catch Ljava/lang/Exception; {:try_start_2f .. :try_end_56} :catch_57
+
+    goto :goto_29
+
+    :catch_57
+    move-exception v0
+
+    :try_start_58
+    const-string v2, "PM,MediaRecorder"
+
+    const-string v3, "Something went wrong while waiting for cancel the stream!"
+
+    invoke-static {v2, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
+    :try_end_62
+    .catchall {:try_start_58 .. :try_end_62} :catchall_76
+
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    #calls: Landroid/media/MediaRecorder;->privacyStop()V
+    invoke-static {v2}, Landroid/media/MediaRecorder;->access$300(Landroid/media/MediaRecorder;)V
+
+    goto :goto_2e
+
+    :cond_68
+    :try_start_68
+    const-string v2, "PM,MediaRecorder"
+
+    const-string v3, "Can\'t delete temporary File, because all is null?! It could be that we only want to record audio?!"
+
+    invoke-static {v2, v3}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;)I
+
+    iget-object v2, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    const/4 v3, 0x0
+
+    #setter for: Landroid/media/MediaRecorder;->deletedFile:Z
+    invoke-static {v2, v3}, Landroid/media/MediaRecorder;->access$502(Landroid/media/MediaRecorder;Z)Z
+    :try_end_75
+    .catchall {:try_start_68 .. :try_end_75} :catchall_76
+    .catch Ljava/lang/Exception; {:try_start_68 .. :try_end_75} :catch_57
+
+    goto :goto_29
+
+    :catchall_76
+    move-exception v2
+
+    iget-object v3, p0, Landroid/media/MediaRecorder$PrivacyRunner;->this$0:Landroid/media/MediaRecorder;
+
+    #calls: Landroid/media/MediaRecorder;->privacyStop()V
+    invoke-static {v3}, Landroid/media/MediaRecorder;->access$300(Landroid/media/MediaRecorder;)V
+
+    throw v2
+.end method
+
+.method public setDelay(J)V
+    .registers 3
+
+    iput-wide p1, p0, Landroid/media/MediaRecorder$PrivacyRunner;->delay:J
+
+    return-void
+.end method
